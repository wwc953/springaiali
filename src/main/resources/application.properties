spring.application.name=springaiali
spring.ai.dashscope.api-key=${DASHSCOPE_API_KEY}
spring.ai.dashscope.chat.options.model=deepseek-r1
#spring.config.import=optional:file:.env[.properties]
spring.ai.dashscope.embedding.options.model=text-embedding-v1

vectorstore.type=redis

#redis
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.ai.vectorstore.redis.index-name=custom-index
spring.ai.vectorstore.redis.prefix=custom-prefix
spring.ai.vectorstore.redis.initialize-schema=true

#es
spring.elasticsearch.uris=http://127.0.0.1:9200
spring.elasticsearch.username=elastic
spring.elasticsearch.password=root
spring.ai.vectorstore.elasticsearch.index-name=custom-index
#要使用的相似度函数 默认 cosine
spring.ai.vectorstore.elasticsearch.similarity=cosine
#是否初始化所需的架构 默认 false
spring.ai.vectorstore.elasticsearch.initialize-schema=true
#向量的维数 默认1536
spring.ai.vectorstore.elasticsearch.dimensions=1536

#pg
spring.datasource.url=jdbc:postgresql://localhost:5432/mydb
spring.datasource..username=postgres
spring.datasource.password=postgres
spring.ai.vectorstore.pgvector.index-type=HNSW
spring.ai.vectorstore.pgvector.distance-type=COSINE_DISTANCE
spring.ai.vectorstore.pgvector.dimensions=1536
spring.ai.vectorstore.pgvector.max-document-batch-size=10000 # Optional: Maximum number of documents per batch


logging.level.org.springframework.ai.chat.client.advisor.SimpleLoggerAdvisor=debug


